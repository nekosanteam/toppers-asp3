#
#		Makefileのターゲット依存部（Raspberry Pi 3(64bit)用）
#
#  $Id:  $
# 

#
#  システム名，チップ名，コア名，開発環境名の定義
#
SYS = rpi3_64
CHIP = bcm283x
CORE = arm64
TOOL = gcc
ifndef GCC_TARGET
  GCC_TARGET = aarch64-linux-gnu
endif

#
#  チップの識別
#
CDEFS := $(CDEFS) -DTOPPERS_USE_BCM2837

#
#  コンパイルオプション
#
INCLUDES := $(INCLUDES) -I$(TARGETDIR)
COPTS := $(COPTS) -mcpu=cortex-a53
CDEFS := $(CDEFS) -D__TARGET_ARCH_ARM=8 -fno-stack-protector
LDFLAGS := $(LDFLAGS) -mcpu=cortex-a53

#
#  カーネルに関する定義
#
KERNEL_DIRS := $(KERNEL_DIRS) $(TARGETDIR)
KERNEL_ASMOBJS := $(KERNEL_ASMOBJS)
KERNEL_COBJS := $(KERNEL_COBJS) target_gpio.o target_kernel_impl.o

#
#  システムサービスに関する定義
#
SYSSVC_DIRS := $(SYSSVC_DIRS) $(SRCDIR)/arch/$(CORE)_$(TOOL)/common
SYSSVC_COBJS := $(SYSSVC_COBJS)

#
#  トレースログ記録のサンプルコードに関する定義
#
ifdef ENABLE_TRACE
	COPTS := $(COPTS) -DTOPPERS_ENABLE_TRACE
	SYSSVC_DIRS := $(SYSSVC_DIRS) $(SRCDIR)/arch/tracelog
endif

#
#  リンカスクリプトの定義
#
LDSCRIPT = $(TARGETDIR)/rpi3_64.ld

#   Raspberry Pi 実行ファイルの生成。
kernel8.img: $(OBJFILE)
	$(OBJCOPY) -O binary -S $(OBJFILE) kernel8.img

.PHONY: qemu
qemu: kernel8.img
	qemu-system-aarch64 -M raspi3 -display none -serial null -serial stdio -kernel kernel8.img

#
#  チップ依存部
#
include $(SRCDIR)/arch/$(CORE)_$(TOOL)/$(CHIP)/Makefile.chip
